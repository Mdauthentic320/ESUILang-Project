package hse.thesis.eusuilang.expression.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (index_xbvbvu_a0a.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ElementType_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new LogicalExpression_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new MathAssigment_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new MathBooleanType_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new MathVarDeclaration_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new MathVarReference_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new NumberType_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae68208cb1L), MetaIdFactory.conceptId(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae68202395L), MetaIdFactory.conceptId(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae681eb24dL), MetaIdFactory.conceptId(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae68202892L), MetaIdFactory.conceptId(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae681eb24fL), MetaIdFactory.conceptId(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae681eb24eL), MetaIdFactory.conceptId(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae6820df46L)).seal();
}
