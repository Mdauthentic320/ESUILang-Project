package hse.thesis.eusuilang.expression.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class MathBooleanType_subtypeOf_Element_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public MathBooleanType_subtypeOf_Element_SubtypingRule() {
  }
  public SNode getSubOrSuperType(SNode mathBooleanType, TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae68208cb1L, "hse.thesis.eusuilang.expression.structure.ElementType"));
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0x803eb20bd0744b77L, 0xa6bafeb2b2f284caL, 0x2f9345ae68202892L, "hse.thesis.eusuilang.expression.structure.MathBooleanType");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean isWeak() {
    return false;
  }
}
